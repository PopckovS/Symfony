#include <iostream>
using namespace std;


/** Лабораторная работа № 4
 *
 * Динамические массивы
 *
 * Составить программу для работы с динамическим
 * одномерным массивом. Размерность массива и его элементы
 * задаются пользователем.
 *
 * Задание:
 * В массиве из целых чисел найти количество нулевых
 * элементов между первым и последним отрицательным элементом. */

int N;
int first = -1, last = -1;
int *arr = new int[N]();

/** Поиск нулевых элементов в массвие */
void finedZeroElemets(int first, int last, int *arr)
{
    if(first == -1){
        cout << "В массиве нету отрицательных элементов" << endl;
    }else if ((first != -1) && (last == -1)) {
        cout << "В массиве найден только один отрицательный элемент array";
        cout << "["<< first <<"] = " << arr[first] << endl;
    }else{
        int counter = 0;
        cout << "Позиция первого отрицательный эллемент = " << first << endl;
        cout << "Позиция последнего отрицательный эллемент = " << last << endl;

        /** Поиск нулевых эллементов между первой и последней позицией */
        for (int i = first; i < last; ++i) {
            if (arr[i] == 0) {
                counter++;
                cout << "Позиция нулевого элемента = " << i << " Значение = " << arr[i] << endl;
            }
        }
        if(counter > 0) {
            cout << "Количество нулевых элементов = " << counter << endl;
        }else{
            cout << "Нулевых элементов не найдено" << endl;
        }
    }
}


/** Поиск первой и последней отрицательной позиции в массиве */
void finedFirstAndLast(int &first, int &last, int *arr)
{
    for (int i = 0; i < N; ++i)
    {
        if(arr[i] < 0)
        {
            if (first == -1) {
                first = i;
            } else {
                last = i;
            }
        }
    }
}

/** И выводим заполненный массив. */
void out(int *arr)
{
    cout << "\nВаш массив: ";
    for (int i = 0; i < N; ++i) {
        cout << arr[i] << " ";
    }
    cout << endl;
}


int main()
{
    /** Заполняем массив с клавиатуры. */
    cout << "Введите размерность массива: ";
    cin >> N;

    /** Заполняем массив */
    int *arr = new int[N]();

    for (int i = 0; i < N; i++) {
        cout << "[" << i + 1 << "]" << ": ";
        cin >> arr[i];
    }

    /** И выводим заполненный массив. */
    out(arr);

    /** Поиск первой и последней отрицательной позиции в массиве */
    finedFirstAndLast(first, last, arr);

    /** Поиск нулевых элементов в массвие */
    finedZeroElemets(first, last, arr);

    return 0;
}






//#include <iostream>
//using namespace std;
//
//
///** Лабораторная работа № 4
// *
// * Динамические массивы
// *
// * Составить программу для работы с динамическим
// * одномерным массивом. Размерность массива и его элементы
// * задаются пользователем.
// *
// * Задание:
// * В массиве из целых чисел найти количество нулевых
// * элементов между первым и последним отрицательным элементом. */
//
//int N;
//int first = -1, last = -1;
//int *arr = new int[N]();
//
//
///** Поиск всех нулевых элементов */
//void finedZeroElemets(int first, int last, int *arr)
//{
//    if(first == -1){
//        cout << "В массиве нету отрицательных элементов" << endl;
//    }else if ((first != -1) && (last == -1)) {
//        cout << "В массиве найден только один отрицательный элемент array";
//        cout << "["<< first <<"] = " << arr[first] << endl;
//    }else{
//
//        cout << "Позиция первого отрицательный эллемент = " << first << endl;
//        cout << "Позиция последнего отрицательный эллемент = " << last << endl;
//
//        /** Поиск нулевых эллементов между первой и последней позицией */
//        for (int i = first; i < last; ++i) {
//            if (arr[i] == 0) {
//                cout << "Позиция нулевого элемента = " << i << " Значение = " << arr[i] << endl;
//            }
//        }
//    }
//}
//
//
///** Поиск первой и последней отрицательной позиции в массиве */
//void finedFirstAndLast(int first, int last)
//{
//    for (int i = 0; i < N; ++i)
//    {
//        if(arr[i] < 0)
//        {
//            if (first == -1) {
//                first = i;
//            } else {
//                last = i;
//            }
//        }
//    }
//}
//
//
///** И выводим заполненный массив. */
//void out(int *arr)
//{
//    cout << "\nВаш массив: ";
//    for (int i = 0; i < N; ++i) {
//        cout << arr[i] << " ";
//    }
//    cout << endl;
//}
//
//
/////** Заполняем массив с клавиатуры. */
////void fillArray(int *arr, int N)
////{
////    cout << "Введите размерность массива: ";
////    cin >> N;
////
////    /** Заполняем массив с клавиатуры. */
////    int *arr = new int[N]();
////
////    for (int i = 0; i < N; i++) {
////        cout << "[" << i + 1 << "]" << ": ";
////        cin >> arr[i];
////    }
////}
//
//
//int main()
//{
//    /** Заполняем массив с клавиатуры. */
//    cout << "Введите размерность массива: ";
//    cin >> N;
//
//    /** Заполняем массив с клавиатуры. */
//    int *arr = new int[N]();
//
//    for (int i = 0; i < N; i++) {
//        cout << "[" << i + 1 << "]" << ": ";
//        cin >> arr[i];
//    }
//
//
//    /** И выводим заполненный массив. */
//    out(arr);
//
//    /** Поиск первой и последней отрицательной позиции в массиве */
//    finedFirstAndLast(first, last);
//
//    /** Поиск всех нулевых элементов */
//    finedZeroElemets(first, last, arr);
//
//    return 0;
//}




